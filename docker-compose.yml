version: '3'

services:
    nginx:
        image: nginx:latest
        volumes:
            - ./docker/nginx.conf:/etc/nginx/nginx.conf
            - .:/var/www
        ports:
            - "80:80"
        depends_on:
            - php

    php:
        build:
            context: ./docker/php/
            dockerfile: Dockerfile
        image: php:8.2-fpm
        volumes:
            - .:/var/www
        depends_on:
            - mysql
        command: ["/start.sh"]

    mysql:
        image: mysql:latest
        environment:
            MYSQL_ROOT_PASSWORD: canoe123
            MYSQL_DATABASE: canoe
            MYSQL_USER: canoe123
            MYSQL_PASSWORD: canoe123
        volumes:
            - mysql-data:/var/lib/mysql
        ports:
            - "3306:3306"

    zookeeper:
        image: wurstmeister/zookeeper:3.4.6
        ports:
            - "2181:2181"

    kafka:
        image: wurstmeister/kafka:latest
        ports:
            - "9092:9092"
        expose:
            - "9093"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        ports:
            - "8080:8080"
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
            KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

    kafka-consumer:
        build:
            dockerfile: ./docker/node/Dockerfile
        depends_on:
            - kafka
        volumes:
            - ./kafka-consumer:/usr/src/app
        working_dir: /usr/src/app
        restart: always
        command: [ "node", "kafka-consumer.js" ]

volumes:
    mysql-data:
